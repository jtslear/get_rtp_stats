#!/usr/bin/ruby

require 'rubygems'
require 'optparse'
require 'ostruct'
require 'net/ping'
require 'pidfile'
require 'socket'
require 'snmp'

Dir["lib/*.rb"].each {|f| require_relative f}

def print_verbose(input,options={})
  if $VERBOSE
    if options[:print_line] == false
      print input
    else
      puts input
    end
  end
end

print_verbose("Script Begin")
pid_file = PidFile.new

unless SNMP::MIB.import_supported? then
  puts "libsmi package required; yum install libsmi"
  exit
end

options = CommandLineOptions.parse(ARGV)
print_verbose("Verbose option enabled")
current_time = Time.now.to_i
printer = Printer.new

graphite_server = GraphiteServer.new(address: options.graphite_server, port: options.graphite_server_port)

unless graphite_server.valid?
  raise ArgumentError
end

current_rtp_session_count = 0

options.device_list.each do |item|
  device = DeviceInfo.new(item,options.community)
  if device.is_up? then
    print_verbose("#{item} is up")
    current_rtp_session_count = device.get_rtp_count
    if current_rtp_session_count then
      print_verbose("#{item} total: #{current_rtp_session_count}")
      printer.add_command("rtp_stats.#{item}.rtp_active #{current_rtp_session_count} #{current_time}")
    else
      current_rtp_session_count = 0
    end
  else
    print_verbose("#{item} down, no SNMP manager created")
  end
  current_rtp_session_count = 0
end

printer.print_to_screen
graphite_server.send_request(printer.request)
